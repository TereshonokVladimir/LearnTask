{"dependencies":[{"name":"./index-7078a255.js","loc":{"line":2,"column":2216}},{"name":"@firebase/util","loc":{"line":3,"column":34}},{"name":"@firebase/app","loc":{"line":4,"column":7}},{"name":"tslib","loc":{"line":5,"column":7}},{"name":"@firebase/logger","loc":{"line":6,"column":7}},{"name":"@firebase/component","loc":{"line":7,"column":7}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cordovaPopupRedirectResolver = exports.addFrameworkForLogging = exports.verifyPasswordResetCode = exports.verifyBeforeUpdateEmail = exports.useDeviceLanguage = exports.updateProfile = exports.updatePhoneNumber = exports.updatePassword = exports.updateEmail = exports.updateCurrentUser = exports.unlink = exports.signOut = exports.signInWithRedirect = exports.signInWithPopup = exports.signInWithPhoneNumber = exports.signInWithEmailLink = exports.signInWithEmailAndPassword = exports.signInWithCustomToken = exports.signInWithCredential = exports.signInAnonymously = exports.setPersistence = exports.sendSignInLinkToEmail = exports.sendPasswordResetEmail = exports.sendEmailVerification = exports.reload = exports.reauthenticateWithRedirect = exports.reauthenticateWithPopup = exports.reauthenticateWithPhoneNumber = exports.reauthenticateWithCredential = exports.prodErrorMap = exports.parseActionCodeURL = exports.onIdTokenChanged = exports.onAuthStateChanged = exports.multiFactor = exports.linkWithRedirect = exports.linkWithPopup = exports.linkWithPhoneNumber = exports.linkWithCredential = exports.isSignInWithEmailLink = exports.initializeAuth = exports.indexedDBLocalPersistence = exports.inMemoryPersistence = exports.getRedirectResult = exports.getMultiFactorResolver = exports.getIdTokenResult = exports.getIdToken = exports.getAuth = exports.getAdditionalUserInfo = exports.fetchSignInMethodsForEmail = exports.deleteUser = exports.debugErrorMap = exports.createUserWithEmailAndPassword = exports.connectAuthEmulator = exports.confirmPasswordReset = exports.checkActionCode = exports.browserSessionPersistence = exports.browserPopupRedirectResolver = exports.browserLocalPersistence = exports.applyActionCode = exports._persistenceKeyName = exports._getRedirectResult = exports._getInstance = exports._getClientVersion = exports._generateEventId = exports._fail = exports._castAuth = exports._assert = exports.UserImpl = exports.TwitterAuthProvider = exports.SignInMethod = exports.SAMLAuthProvider = exports.SAMLAuthCredential = exports.RecaptchaVerifier = exports.ProviderId = exports.PhoneMultiFactorGenerator = exports.PhoneAuthProvider = exports.PhoneAuthCredential = exports.OperationType = exports.OAuthProvider = exports.OAuthCredential = exports.GoogleAuthProvider = exports.GithubAuthProvider = exports.FetchProvider = exports.FactorId = exports.FacebookAuthProvider = exports.EmailAuthProvider = exports.EmailAuthCredential = exports.AuthPopup = exports.AuthImpl = exports.AuthErrorCodes = exports.AuthCredential = exports.ActionCodeURL = exports.ActionCodeOperation = undefined;\n\nvar _index7078a = require(\"./index-7078a255.js\");\n\nObject.defineProperty(exports, \"ActionCodeOperation\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.A;\n  }\n});\nObject.defineProperty(exports, \"ActionCodeURL\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.ac;\n  }\n});\nObject.defineProperty(exports, \"AuthCredential\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.G;\n  }\n});\nObject.defineProperty(exports, \"AuthErrorCodes\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.C;\n  }\n});\nObject.defineProperty(exports, \"AuthImpl\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.aE;\n  }\n});\nObject.defineProperty(exports, \"AuthPopup\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.aH;\n  }\n});\nObject.defineProperty(exports, \"EmailAuthCredential\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.H;\n  }\n});\nObject.defineProperty(exports, \"EmailAuthProvider\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.L;\n  }\n});\nObject.defineProperty(exports, \"FacebookAuthProvider\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.M;\n  }\n});\nObject.defineProperty(exports, \"FactorId\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.F;\n  }\n});\nObject.defineProperty(exports, \"FetchProvider\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.aI;\n  }\n});\nObject.defineProperty(exports, \"GithubAuthProvider\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.Q;\n  }\n});\nObject.defineProperty(exports, \"GoogleAuthProvider\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.N;\n  }\n});\nObject.defineProperty(exports, \"OAuthCredential\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.I;\n  }\n});\nObject.defineProperty(exports, \"OAuthProvider\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.T;\n  }\n});\nObject.defineProperty(exports, \"OperationType\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.O;\n  }\n});\nObject.defineProperty(exports, \"PhoneAuthCredential\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.J;\n  }\n});\nObject.defineProperty(exports, \"PhoneAuthProvider\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.P;\n  }\n});\nObject.defineProperty(exports, \"PhoneMultiFactorGenerator\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.m;\n  }\n});\nObject.defineProperty(exports, \"ProviderId\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.o;\n  }\n});\nObject.defineProperty(exports, \"RecaptchaVerifier\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.R;\n  }\n});\nObject.defineProperty(exports, \"SAMLAuthCredential\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.aJ;\n  }\n});\nObject.defineProperty(exports, \"SAMLAuthProvider\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.U;\n  }\n});\nObject.defineProperty(exports, \"SignInMethod\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.S;\n  }\n});\nObject.defineProperty(exports, \"TwitterAuthProvider\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.V;\n  }\n});\nObject.defineProperty(exports, \"UserImpl\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.aD;\n  }\n});\nObject.defineProperty(exports, \"_assert\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.aw;\n  }\n});\nObject.defineProperty(exports, \"_castAuth\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.aC;\n  }\n});\nObject.defineProperty(exports, \"_fail\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.as;\n  }\n});\nObject.defineProperty(exports, \"_generateEventId\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.aG;\n  }\n});\nObject.defineProperty(exports, \"_getClientVersion\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.aF;\n  }\n});\nObject.defineProperty(exports, \"_getInstance\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.ax;\n  }\n});\nObject.defineProperty(exports, \"_getRedirectResult\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.aA;\n  }\n});\nObject.defineProperty(exports, \"_persistenceKeyName\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.ay;\n  }\n});\nObject.defineProperty(exports, \"applyActionCode\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.a1;\n  }\n});\nObject.defineProperty(exports, \"browserLocalPersistence\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.b;\n  }\n});\nObject.defineProperty(exports, \"browserPopupRedirectResolver\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.k;\n  }\n});\nObject.defineProperty(exports, \"browserSessionPersistence\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.a;\n  }\n});\nObject.defineProperty(exports, \"checkActionCode\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.a2;\n  }\n});\nObject.defineProperty(exports, \"confirmPasswordReset\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.a0;\n  }\n});\nObject.defineProperty(exports, \"connectAuthEmulator\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.E;\n  }\n});\nObject.defineProperty(exports, \"createUserWithEmailAndPassword\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.a4;\n  }\n});\nObject.defineProperty(exports, \"debugErrorMap\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.z;\n  }\n});\nObject.defineProperty(exports, \"deleteUser\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.y;\n  }\n});\nObject.defineProperty(exports, \"fetchSignInMethodsForEmail\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.a9;\n  }\n});\nObject.defineProperty(exports, \"getAdditionalUserInfo\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.ak;\n  }\n});\nObject.defineProperty(exports, \"getAuth\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.n;\n  }\n});\nObject.defineProperty(exports, \"getIdToken\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.ah;\n  }\n});\nObject.defineProperty(exports, \"getIdTokenResult\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.ai;\n  }\n});\nObject.defineProperty(exports, \"getMultiFactorResolver\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.am;\n  }\n});\nObject.defineProperty(exports, \"getRedirectResult\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.j;\n  }\n});\nObject.defineProperty(exports, \"inMemoryPersistence\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.K;\n  }\n});\nObject.defineProperty(exports, \"indexedDBLocalPersistence\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.i;\n  }\n});\nObject.defineProperty(exports, \"initializeAuth\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.D;\n  }\n});\nObject.defineProperty(exports, \"isSignInWithEmailLink\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.a7;\n  }\n});\nObject.defineProperty(exports, \"linkWithCredential\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.Y;\n  }\n});\nObject.defineProperty(exports, \"linkWithPhoneNumber\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.l;\n  }\n});\nObject.defineProperty(exports, \"linkWithPopup\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.d;\n  }\n});\nObject.defineProperty(exports, \"linkWithRedirect\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.g;\n  }\n});\nObject.defineProperty(exports, \"multiFactor\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.an;\n  }\n});\nObject.defineProperty(exports, \"onAuthStateChanged\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.t;\n  }\n});\nObject.defineProperty(exports, \"onIdTokenChanged\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.q;\n  }\n});\nObject.defineProperty(exports, \"parseActionCodeURL\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.ad;\n  }\n});\nObject.defineProperty(exports, \"prodErrorMap\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.B;\n  }\n});\nObject.defineProperty(exports, \"reauthenticateWithCredential\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.Z;\n  }\n});\nObject.defineProperty(exports, \"reauthenticateWithPhoneNumber\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.r;\n  }\n});\nObject.defineProperty(exports, \"reauthenticateWithPopup\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.e;\n  }\n});\nObject.defineProperty(exports, \"reauthenticateWithRedirect\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.h;\n  }\n});\nObject.defineProperty(exports, \"reload\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.al;\n  }\n});\nObject.defineProperty(exports, \"sendEmailVerification\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.aa;\n  }\n});\nObject.defineProperty(exports, \"sendPasswordResetEmail\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.$;\n  }\n});\nObject.defineProperty(exports, \"sendSignInLinkToEmail\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.a6;\n  }\n});\nObject.defineProperty(exports, \"setPersistence\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.p;\n  }\n});\nObject.defineProperty(exports, \"signInAnonymously\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.W;\n  }\n});\nObject.defineProperty(exports, \"signInWithCredential\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.X;\n  }\n});\nObject.defineProperty(exports, \"signInWithCustomToken\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a._;\n  }\n});\nObject.defineProperty(exports, \"signInWithEmailAndPassword\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.a5;\n  }\n});\nObject.defineProperty(exports, \"signInWithEmailLink\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.a8;\n  }\n});\nObject.defineProperty(exports, \"signInWithPhoneNumber\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.s;\n  }\n});\nObject.defineProperty(exports, \"signInWithPopup\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.c;\n  }\n});\nObject.defineProperty(exports, \"signInWithRedirect\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.f;\n  }\n});\nObject.defineProperty(exports, \"signOut\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.x;\n  }\n});\nObject.defineProperty(exports, \"unlink\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.aj;\n  }\n});\nObject.defineProperty(exports, \"updateCurrentUser\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.w;\n  }\n});\nObject.defineProperty(exports, \"updateEmail\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.af;\n  }\n});\nObject.defineProperty(exports, \"updatePassword\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.ag;\n  }\n});\nObject.defineProperty(exports, \"updatePhoneNumber\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.u;\n  }\n});\nObject.defineProperty(exports, \"updateProfile\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.ae;\n  }\n});\nObject.defineProperty(exports, \"useDeviceLanguage\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.v;\n  }\n});\nObject.defineProperty(exports, \"verifyBeforeUpdateEmail\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.ab;\n  }\n});\nObject.defineProperty(exports, \"verifyPasswordResetCode\", {\n  enumerable: true,\n  get: function () {\n    return _index7078a.a3;\n  }\n});\n\nvar _util = require(\"@firebase/util\");\n\nrequire(\"@firebase/app\");\n\nrequire(\"tslib\");\n\nrequire(\"@firebase/logger\");\n\nrequire(\"@firebase/component\");\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _cordovaWindow() {\n  return window;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\nconst REDIRECT_TIMEOUT_MS = 2000;\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\nasync function _generateHandlerUrl(auth, event, provider) {\n  var _a;\n  // Get the cordova plugins\n  const { BuildInfo } = _cordovaWindow();\n  (0, _index7078a.ap)(event.sessionId, 'AuthEvent did not contain a session ID');\n  const sessionDigest = await computeSha256(event.sessionId);\n  const additionalParams = {};\n  if ((0, _index7078a.aq)()) {\n    // iOS app identifier\n    additionalParams['ibi'] = BuildInfo.packageName;\n  } else if ((0, _index7078a.ar)()) {\n    // Android app identifier\n    additionalParams['apn'] = BuildInfo.packageName;\n  } else {\n    (0, _index7078a.as)(auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\n  }\n  // Add the display name if available\n  if (BuildInfo.displayName) {\n    additionalParams['appDisplayName'] = BuildInfo.displayName;\n  }\n  // Attached the hashed session ID\n  additionalParams['sessionId'] = sessionDigest;\n  return (0, _index7078a.at)(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);\n}\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\nasync function _validateOrigin(auth) {\n  const { BuildInfo } = _cordovaWindow();\n  const request = {};\n  if ((0, _index7078a.aq)()) {\n    request.iosBundleId = BuildInfo.packageName;\n  } else if ((0, _index7078a.ar)()) {\n    request.androidPackageName = BuildInfo.packageName;\n  } else {\n    (0, _index7078a.as)(auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\n  }\n  // Will fail automatically if package name is not authorized\n  await (0, _index7078a.au)(auth, request);\n}\nfunction _performRedirect(handlerUrl) {\n  // Get the cordova plugins\n  const { cordova } = _cordovaWindow();\n  return new Promise(resolve => {\n    cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\n      let iabRef = null;\n      if (browserTabIsAvailable) {\n        cordova.plugins.browsertab.openUrl(handlerUrl);\n      } else {\n        // TODO: Return the inappbrowser ref that's returned from the open call\n        iabRef = cordova.InAppBrowser.open(handlerUrl, (0, _index7078a.ao)() ? '_blank' : '_system', 'location=yes');\n      }\n      resolve(iabRef);\n    });\n  });\n}\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\nasync function _waitForAppResume(auth, eventListener, iabRef) {\n  // Get the cordova plugins\n  const { cordova } = _cordovaWindow();\n  let cleanup = () => {};\n  try {\n    await new Promise((resolve, reject) => {\n      let onCloseTimer = null;\n      // DEFINE ALL THE CALLBACKS =====\n      function authEventSeen() {\n        var _a;\n        // Auth event was detected. Resolve this promise and close the extra\n        // window if it's still open.\n        resolve();\n        const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\n        if (typeof closeBrowserTab === 'function') {\n          closeBrowserTab();\n        }\n        // Close inappbrowser emebedded webview in iOS7 and 8 case if still\n        // open.\n        if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\n          iabRef.close();\n        }\n      }\n      function resumed() {\n        if (onCloseTimer) {\n          // This code already ran; do not rerun.\n          return;\n        }\n        onCloseTimer = window.setTimeout(() => {\n          // Wait two seeconds after resume then reject.\n          reject((0, _index7078a.av)(auth, \"redirect-cancelled-by-user\" /* REDIRECT_CANCELLED_BY_USER */));\n        }, REDIRECT_TIMEOUT_MS);\n      }\n      function visibilityChanged() {\n        if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\n          resumed();\n        }\n      }\n      // ATTACH ALL THE LISTENERS =====\n      // Listen for the auth event\n      eventListener.addPassiveListener(authEventSeen);\n      // Listen for resume and visibility events\n      document.addEventListener('resume', resumed, false);\n      if ((0, _index7078a.ar)()) {\n        document.addEventListener('visibilitychange', visibilityChanged, false);\n      }\n      // SETUP THE CLEANUP FUNCTION =====\n      cleanup = () => {\n        eventListener.removePassiveListener(authEventSeen);\n        document.removeEventListener('resume', resumed, false);\n        document.removeEventListener('visibilitychange', visibilityChanged, false);\n        if (onCloseTimer) {\n          window.clearTimeout(onCloseTimer);\n        }\n      };\n    });\n  } finally {\n    cleanup();\n  }\n}\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\nfunction _checkCordovaConfiguration(auth) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n  const win = _cordovaWindow();\n  // Check all dependencies installed.\n  // https://github.com/nordnet/cordova-universal-links-plugin\n  // Note that cordova-universal-links-plugin has been abandoned.\n  // A fork with latest fixes is available at:\n  // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\n  (0, _index7078a.aw)(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-universal-links-plugin-fix'\n  });\n  // https://www.npmjs.com/package/cordova-plugin-buildinfo\n  (0, _index7078a.aw)(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-plugin-buildInfo'\n  });\n  // https://github.com/google/cordova-plugin-browsertab\n  (0, _index7078a.aw)(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-plugin-browsertab'\n  });\n  (0, _index7078a.aw)(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-plugin-browsertab'\n  });\n  // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\n  (0, _index7078a.aw)(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-plugin-inappbrowser'\n  });\n}\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\nasync function computeSha256(sessionId) {\n  const bytes = stringToArrayBuffer(sessionId);\n  // TODO: For IE11 crypto has a different name and this operation comes back\n  //       as an object, not a promise. This is the old proposed standard that\n  //       is used by IE11:\n  // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\n  const buf = await crypto.subtle.digest('SHA-256', bytes);\n  const arr = Array.from(new Uint8Array(buf));\n  return arr.map(num => num.toString(16).padStart(2, '0')).join('');\n}\nfunction stringToArrayBuffer(str) {\n  // This function is only meant to deal with an ASCII charset and makes\n  // certain simplifying assumptions.\n  (0, _index7078a.ap)(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder().encode(str);\n  }\n  const buff = new ArrayBuffer(str.length);\n  const view = new Uint8Array(buff);\n  for (let i = 0; i < str.length; i++) {\n    view[i] = str.charCodeAt(i);\n  }\n  return view;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst SESSION_ID_LENGTH = 20;\n/** Custom AuthEventManager that adds passive listeners to events */\nclass CordovaAuthEventManager extends _index7078a.az {\n  constructor() {\n    super(...arguments);\n    this.passiveListeners = new Set();\n    this.initPromise = new Promise(resolve => {\n      this.resolveInialized = resolve;\n    });\n  }\n  addPassiveListener(cb) {\n    this.passiveListeners.add(cb);\n  }\n  removePassiveListener(cb) {\n    this.passiveListeners.delete(cb);\n  }\n  // In a Cordova environment, this manager can live through multiple redirect\n  // operations\n  resetRedirect() {\n    this.queuedRedirectEvent = null;\n    this.hasHandledPotentialRedirect = false;\n  }\n  /** Override the onEvent method */\n  onEvent(event) {\n    this.resolveInialized();\n    this.passiveListeners.forEach(cb => cb(event));\n    return super.onEvent(event);\n  }\n  async initialized() {\n    await this.initPromise;\n  }\n}\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\nfunction _generateNewEvent(auth, type, eventId = null) {\n  return {\n    type,\n    eventId,\n    urlResponse: null,\n    sessionId: generateSessionId(),\n    postBody: null,\n    tenantId: auth.tenantId,\n    error: (0, _index7078a.av)(auth, \"no-auth-event\" /* NO_AUTH_EVENT */)\n  };\n}\nfunction _savePartialEvent(auth, event) {\n  return storage()._set(persistenceKey(auth), event);\n}\nasync function _getAndRemoveEvent(auth) {\n  const event = await storage()._get(persistenceKey(auth));\n  if (event) {\n    await storage()._remove(persistenceKey(auth));\n  }\n  return event;\n}\nfunction _eventFromPartialAndUrl(partialEvent, url) {\n  var _a, _b;\n  // Parse the deep link within the dynamic link URL.\n  const callbackUrl = _getDeepLinkFromCallback(url);\n  // Confirm it is actually a callback URL.\n  // Currently the universal link will be of this format:\n  // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\n  // This is a fake URL but is not intended to take the user anywhere\n  // and just redirect to the app.\n  if (callbackUrl.includes('/__/auth/callback')) {\n    // Check if there is an error in the URL.\n    // This mechanism is also used to pass errors back to the app:\n    // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\n    const params = searchParamsOrEmpty(callbackUrl);\n    // Get the error object corresponding to the stringified error if found.\n    const errorObject = params['firebaseError'] ? parseJsonOrNull(decodeURIComponent(params['firebaseError'])) : null;\n    const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\n    const error = code ? (0, _index7078a.av)(code) : null;\n    if (error) {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        error,\n        urlResponse: null,\n        sessionId: null,\n        postBody: null\n      };\n    } else {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        sessionId: partialEvent.sessionId,\n        urlResponse: callbackUrl,\n        postBody: null\n      };\n    }\n  }\n  return null;\n}\nfunction generateSessionId() {\n  const chars = [];\n  const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (let i = 0; i < SESSION_ID_LENGTH; i++) {\n    const idx = Math.floor(Math.random() * allowedChars.length);\n    chars.push(allowedChars.charAt(idx));\n  }\n  return chars.join('');\n}\nfunction storage() {\n  return (0, _index7078a.ax)(_index7078a.b);\n}\nfunction persistenceKey(auth) {\n  return (0, _index7078a.ay)(\"authEvent\" /* AUTH_EVENT */, auth.config.apiKey, auth.name);\n}\nfunction parseJsonOrNull(json) {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n}\n// Exported for testing\nfunction _getDeepLinkFromCallback(url) {\n  const params = searchParamsOrEmpty(url);\n  const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\n  // Double link case (automatic redirect)\n  const doubleDeepLink = searchParamsOrEmpty(link)['link'];\n  // iOS custom scheme links.\n  const iOSDeepLink = params['deep_link_id'] ? decodeURIComponent(params['deep_link_id']) : undefined;\n  const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\nfunction searchParamsOrEmpty(url) {\n  if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\n    return {};\n  }\n  const [_, ...rest] = url.split('?');\n  return (0, _util.querystringDecode)(rest.join('?'));\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\nclass CordovaPopupRedirectResolver {\n  constructor() {\n    this._redirectPersistence = _index7078a.a;\n    this._shouldInitProactively = true; // This is lightweight for Cordova\n    this.eventManagers = new Map();\n    this.originValidationPromises = {};\n    this._completeRedirectFn = _index7078a.aA;\n  }\n  async _initialize(auth) {\n    const key = auth._key();\n    let manager = this.eventManagers.get(key);\n    if (!manager) {\n      manager = new CordovaAuthEventManager(auth);\n      this.eventManagers.set(key, manager);\n      this.attachCallbackListeners(auth, manager);\n    }\n    return manager;\n  }\n  _openPopup(auth) {\n    (0, _index7078a.as)(auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\n  }\n  async _openRedirect(auth, provider, authType, eventId) {\n    _checkCordovaConfiguration(auth);\n    const manager = await this._initialize(auth);\n    await manager.initialized();\n    // Reset the persisted redirect states. This does not matter on Web where\n    // the redirect always blows away application state entirely. On Cordova,\n    // the app maintains control flow through the redirect.\n    manager.resetRedirect();\n    (0, _index7078a.aB)();\n    await this._originValidation(auth);\n    const event = _generateNewEvent(auth, authType, eventId);\n    await _savePartialEvent(auth, event);\n    const url = await _generateHandlerUrl(auth, event, provider);\n    const iabRef = await _performRedirect(url);\n    return _waitForAppResume(auth, manager, iabRef);\n  }\n  _isIframeWebStorageSupported(_auth, _cb) {\n    throw new Error('Method not implemented.');\n  }\n  _originValidation(auth) {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n    return this.originValidationPromises[key];\n  }\n  attachCallbackListeners(auth, manager) {\n    // Get the global plugins\n    const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\n    const noEventTimeout = setTimeout(async () => {\n      // We didn't see that initial event. Clear any pending object and\n      // dispatch no event\n      await _getAndRemoveEvent(auth);\n      manager.onEvent(generateNoEvent());\n    }, INITIAL_EVENT_TIMEOUT_MS);\n    const universalLinksCb = async eventData => {\n      // We have an event so we can clear the no event timeout\n      clearTimeout(noEventTimeout);\n      const partialEvent = await _getAndRemoveEvent(auth);\n      let finalEvent = null;\n      if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\n        finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\n      }\n      // If finalEvent is never filled, trigger with no event\n      manager.onEvent(finalEvent || generateNoEvent());\n    };\n    // Universal links subscriber doesn't exist for iOS, so we need to check\n    if (typeof universalLinks !== 'undefined' && typeof universalLinks.subscribe === 'function') {\n      universalLinks.subscribe(null, universalLinksCb);\n    }\n    // iOS 7 or 8 custom URL schemes.\n    // This is also the current default behavior for iOS 9+.\n    // For this to work, cordova-plugin-customurlscheme needs to be installed.\n    // https://github.com/EddyVerbruggen/Custom-URL-scheme\n    // Do not overwrite the existing developer's URL handler.\n    const existingHandleOpenURL = handleOpenURL;\n    const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\n    _cordovaWindow().handleOpenURL = async url => {\n      if (url.toLowerCase().startsWith(packagePrefix)) {\n        // We want this intentionally to float\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        universalLinksCb({ url });\n      }\n      // Call the developer's handler if it is present.\n      if (typeof existingHandleOpenURL === 'function') {\n        try {\n          existingHandleOpenURL(url);\n        } catch (e) {\n          // This is a developer error. Don't stop the flow of the SDK.\n          console.error(e);\n        }\n      }\n    };\n  }\n}\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\nconst cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\nfunction generateNoEvent() {\n  return {\n    type: \"unknown\" /* UNKNOWN */\n    , eventId: null,\n    sessionId: null,\n    urlResponse: null,\n    postBody: null,\n    tenantId: null,\n    error: (0, _index7078a.av)(\"no-auth-event\" /* NO_AUTH_EVENT */)\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\n// of autogenerated documentation pages to reduce accidental misuse.\nfunction addFrameworkForLogging(auth, framework) {\n  (0, _index7078a.aC)(auth)._logFramework(framework);\n}\n\nexports.addFrameworkForLogging = addFrameworkForLogging;\nexports.cordovaPopupRedirectResolver = cordovaPopupRedirectResolver;\n//# sourceMappingURL=internal.js.map"},"hash":"85d4ff30ebd0c08250abe66f9fd9d858"}