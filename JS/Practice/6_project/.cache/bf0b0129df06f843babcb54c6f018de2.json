{"dependencies":[{"name":"firebase/app","loc":{"line":1,"column":30}},{"name":"firebase/storage","loc":{"line":2,"column":70}},{"name":"./upload","loc":{"line":3,"column":21}}],"generated":{"js":"\"use strict\";\n\nvar _app = require(\"firebase/app\");\n\nvar _storage = require(\"firebase/storage\");\n\nvar _upload = require(\"./upload\");\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBF38hekJ5xsLAprPmx-hSQ6CfKKy-X3wE\",\n  authDomain: \"fe-upload-75e89.firebaseapp.com\",\n  projectId: \"fe-upload-75e89\",\n  storageBucket: \"fe-upload-75e89.appspot.com\",\n  messagingSenderId: \"367494831197\",\n  appId: \"1:367494831197:web:daf7b85fa0d6005c5501b4\"\n};\n\nconst firebaseApp = (0, _app.initializeApp)(firebaseConfig);\nconst storage = (0, _storage.getStorage)(firebaseApp);\n\n(0, _upload.upload)('#file', {\n  multi: true,\n  accept: ['.png', '.doc', '.pdf', '.docx'],\n  onUpload(files, blocks) {\n    files.forEach((file, index) => {\n      const storageRef = (0, _storage.ref)(storage, `files  ${file.name}`);\n      const uploadTask = (0, _storage.uploadBytesResumable)(storageRef, file);\n\n      uploadTask.on('state_changed', snapshot => {\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes * 100).toFixed() + '%';\n        const block = blocks[index].querySelector('.preview-info-progress');\n        block.textContent = progress;\n        block.style.width = progress;\n      }, error => console.log(error), () => {\n        (0, _storage.getDownloadURL)(uploadTask.snapshot.ref).then(downloadURL => {\n          console.log('File available at', downloadURL);\n        });\n      });\n    });\n  }\n});"},"hash":"dac6b546fa84504071ee97ef301b8743"}